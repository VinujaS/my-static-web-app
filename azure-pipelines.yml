# Node.js with React

# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - name: 'deployment_environment_name'
    ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/main') }}:
      value: 'production'
    ${{ if startsWith(variables['Build.SourceBranch'], 'refs/pull/') }}:
      value: $[ replace(variables['System.PullRequest.SourceBranch'], 'refs/heads/', '') ]

steps:
# - bash: |
#   if [[ "$branchName" == 'main' ]]
#   then
#     echo "##vso[task.setvariable deployment_environment_name="production"]"
#   else
#     echo "##vso[task.setvariable deployment_environment_name=$(branchName)]"
#   fi
#   echo 'deployment_environment_name: ' $deployment_environment_name

- task: NodeTool@0
  inputs:
    versionSource: 'spec'
    versionSpec: '>=18.0.0'
  displayName: 'Install Node.js'

- script: |
    cd react-app && npm install
    npm run build
  displayName: 'npm install and build'

- task: AzureStaticWebApp@0
  inputs:
    app_location: 'react-app'
    output_location: 'build'
    verbose: true
    production_branch: 'main'
    deployment_environment: $(deployment_environment_name)
  name: 'SWA'
  env:
    azure_static_web_apps_api_token: $(deployment-token)
  
- bash: echo $(SWA.static_web_app_url)
        echo $(Build.SourceVersionMessage)

- task: GitHubComment@0
  inputs:
    gitHubConnection: 'github.com_VinujaS'
    repositoryName: 'VinujaS/my-static-web-app'
    comment: 'View build at: $(SWA.static_web_app_url) ðŸŽ‰'

- bash: |
   echo 'deployment_environment: ' $(System.PullRequest.PullRequestId)
   echo 'Build.SourceBranch: ' $(Build.SourceBranch)
   echo 'System.PullRequest.SourceBranch: ' $(System.PullRequest.SourceBranch)
   echo 'deployment_environment_name: ' $(deployment_environment_name)

# Delete staging slot
- bash: |
   # PR Closed, changes merged to main
   echo 'PR close, changes merged to main'

   # get the source version message
   sourceVersionMessage="$(Build.SourceVersionMessage)"
   echo 'build source version message: ' $sourceVersionMessage

   # parse the PR number from the source version message
   prNumber=$(echo $sourceVersionMessage| sed -r 's/^([^.]+).*$/\1/; s/^[^0-9]*([0-9]+).*$/\1/')
   echo 'prNumber: ' $prNumber

   # Login to Azure using service principal
   echo 'Logging into Azure with service principal...'
   az login \
     --service-principal \
     --username $(servicePrincipal.name) \
     --tenant $(servicePrincipal.tenant) \
     --password $(SERVICE_PRINCIPAL_PASSWORD)
   echo 'Logged into Azure'
   echo ''
  condition: and(succeeded(), startsWith(variables['Build.SourceVersionMessage'], 'Merge pull request'))